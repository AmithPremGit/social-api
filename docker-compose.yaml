version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - ENV=development
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=socialnetwork
      - DB_SSLMODE=disable
      - DB_MAX_OPEN_CONNS=25
      - DB_MAX_IDLE_CONNS=25
      - DB_MAX_IDLE_TIME=15m
      - REDIS_ADDR=redis:6379
      - REDIS_ENABLED=true
      - AUTH_TOKEN_SECRET=your-super-secret-key-change-in-production
      - AUTH_TOKEN_EXPIRY=72h
      - RATE_LIMITER_ENABLED=true
      - RATE_LIMITER_REQUESTS=20
      - RATE_LIMITER_WINDOW=5s
    depends_on:
      - db
      - redis
    restart: on-failure

  db:
    image: postgres:16
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=socialnetwork
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d socialnetwork"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  redis_data: